class Solution {
    public int mini(int arr[]){
        int minElem = Integer.MAX_VALUE;
        for(int i=0; i<arr.length; i++){
            minElem = Math.min(arr[i], minElem);
        }
        return minElem;
    }
    public int maxi(int arr[]){
        int maxElem = Integer.MIN_VALUE;
        for(int i=0; i<arr.length; i++){
            maxElem = Math.max(arr[i], maxElem);
        }
        return maxElem;
    }
    public int minDays(int[] bloomDay, int m, int k) {
        int n=bloomDay.length;
        if(m*k>n) return -1;
        int low=mini(bloomDay);
        int high=maxi(bloomDay);
        while(low<=high){
            int mid=low+(high-low)/2;
            if(func(bloomDay, mid, m, k)){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return low;
    }
    public boolean func(int arr[], int day, int m, int k){
        int n=arr.length;
        int cnt=0;
        int noOfBouquets=0;
        for(int i=0; i<n; i++){
            if(arr[i]<=day){
                cnt++;
            }else{
                noOfBouquets += (cnt/k);
                cnt=0;
            }
        }
        noOfBouquets += (cnt/k);
        if(noOfBouquets>=m) return true;
        else return false;
    }
}
